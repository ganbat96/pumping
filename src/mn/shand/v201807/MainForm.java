/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mn.shand.v201807;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.AbstractTableModel;
import mn.shand.v2018.msg.ClientMsg;
import mn.shand.v2018.msg.DenjMsg;
import mn.shand.v2018.msg.GobiMsg;
import mn.shand.v2018.msg.HudagMsg;
import mn.shand.v2018.msg.MyangaMsg;
import mn.shand.v2018.msg.ZeegMsg;

/**
 *
 * @author DELL3050
 */
public class MainForm extends javax.swing.JFrame {

    private Map<String, Client> clients = new HashMap<>();
    private AutoPilot autoPilot;

    private boolean gobiRun;
    private boolean denjRun;
    private boolean zeegRun;

    private PumpDataTableModel pump1Model = new PumpDataTableModel(false);
    private PumpDataTableModel pump2Model = new PumpDataTableModel(false);
    private PumpDataTableModel pumpArchiveModel = new PumpDataTableModel(true);

    private LogTableModel logTableModel = new LogTableModel();

    /**
     * Creates new form NewJFrame
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        tooluurSearchHudagSelector = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jP_de = new javax.swing.JPanel();
        jL_de_network = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jP_bb = new javax.swing.JPanel();
        jL_hudag2_network = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jL_zg_pump2 = new javax.swing.JLabel();
        jL_zg_pump1 = new javax.swing.JLabel();
        jL_bb_temp = new javax.swing.JLabel();
        jL_pump_2 = new javax.swing.JLabel();
        jL_pump3 = new javax.swing.JLabel();
        jL_bb_rh = new javax.swing.JLabel();
        jL_cc_temp = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jL_de_pump1 = new javax.swing.JLabel();
        jL_underpump0 = new javax.swing.JLabel();
        jL_gb_pump1 = new javax.swing.JLabel();
        jL_zg_tank = new javax.swing.JLabel();
        jL_zg_pumps = new javax.swing.JLabel();
        jL_gb_tank = new javax.swing.JLabel();
        jL_gb_pump2 = new javax.swing.JLabel();
        jL_gb_pumps = new javax.swing.JLabel();
        jL_de_h1 = new javax.swing.JLabel();
        jL_de_pump2 = new javax.swing.JLabel();
        jL_de_tank = new javax.swing.JLabel();
        jL_de_pumps = new javax.swing.JLabel();
        jL_de_rh = new javax.swing.JLabel();
        jL_1000_1 = new javax.swing.JLabel();
        jL_1000_2 = new javax.swing.JLabel();
        jL_de_temp = new javax.swing.JLabel();
        jL_gb_temp = new javax.swing.JLabel();
        jL_zg_h1 = new javax.swing.JLabel();
        jL_zg_temp = new javax.swing.JLabel();
        jL_zg_rh = new javax.swing.JLabel();
        jL_gb_rh = new javax.swing.JLabel();
        jL_LCD = new javax.swing.JLabel();
        jL_cc_rh = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jL_gb_h1 = new javax.swing.JLabel();
        jP_gobi = new javax.swing.JPanel();
        jL_gb_network = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jP_zeeg = new javax.swing.JPanel();
        jL_zg_network = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jL_1000_temp = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jL_1000_rh = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jP_cc = new javax.swing.JPanel();
        jL_hudag3_network = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jP_1000 = new javax.swing.JPanel();
        jL_1000_network = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jL_hudag2_tolov = new javax.swing.JLabel();
        jL_hudag3_tolov = new javax.swing.JLabel();
        jL_de_tolov = new javax.swing.JLabel();
        jL_gb_tolov = new javax.swing.JLabel();
        jL_zg_tolov = new javax.swing.JLabel();
        chkAutoMode = new javax.swing.JCheckBox();
        chkAutoModeSan1 = new javax.swing.JCheckBox();
        chkAutoModeSan2 = new javax.swing.JCheckBox();
        jL_1000_h1 = new javax.swing.JLabel();
        jL_1000h2 = new javax.swing.JLabel();
        jLAutoPilotStat = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_chat = new javax.swing.JTextArea();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        b_denjzalgah1 = new javax.swing.JButton();
        b_denjzalgah2 = new javax.swing.JButton();
        b_denjtaslah = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        b_gobizalgah1 = new javax.swing.JButton();
        b_gobizalgah2 = new javax.swing.JButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        b_zeegzalgah2 = new javax.swing.JButton();
        b_zeegzalgah1 = new javax.swing.JButton();
        b_hudagtaslah1 = new javax.swing.JButton();
        b_hudagzalgah1 = new javax.swing.JButton();
        b_hudagtaslah2 = new javax.swing.JButton();
        b_hudagzalgah2 = new javax.swing.JButton();
        b_gobitaslah = new javax.swing.JButton();
        b_zeegtaslah = new javax.swing.JButton();
        b_clear = new javax.swing.JButton();
        txt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        bPump1Refresh = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtPumpLast3 = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        bPump2Refresh = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtPumpLast4 = new javax.swing.JTable();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        pumpSearchStartDate = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        pumpSearchEndDate = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        pumpSearchBtn = new javax.swing.JButton();
        jRadioTooluurSearchHudag1 = new javax.swing.JRadioButton();
        jRadioTooluurSearchHudag2 = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePumpArchive = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jtLogRows = new javax.swing.JTextField();
        logSearchBtn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        logTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jP_de.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 102, 102)));
        jP_de.setLayout(null);

        jL_de_network.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/network_off.png"))); // NOI18N
        jP_de.add(jL_de_network);
        jL_de_network.setBounds(10, 20, 75, 57);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ДЭНЖ ӨРГӨХ СТАНЦ");
        jP_de.add(jLabel1);
        jLabel1.setBounds(100, 40, 160, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jP_de.add(jLabel3);
        jLabel3.setBounds(120, 50, 100, 20);

        jPanel1.add(jP_de);
        jP_de.setBounds(780, 20, 280, 100);

        jP_bb.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 102, 102)));
        jP_bb.setLayout(null);

        jL_hudag2_network.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/network_off_jijig.png"))); // NOI18N
        jP_bb.add(jL_hudag2_network);
        jL_hudag2_network.setBounds(10, 20, 45, 34);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("ГХ 2");
        jP_bb.add(jLabel11);
        jLabel11.setBounds(70, 30, 40, 17);

        jPanel1.add(jP_bb);
        jP_bb.setBounds(30, 370, 120, 70);
        jPanel1.add(jL_zg_pump2);
        jL_zg_pump2.setBounds(360, 370, 60, 60);
        jPanel1.add(jL_zg_pump1);
        jL_zg_pump1.setBounds(360, 250, 60, 60);

        jL_bb_temp.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_bb_temp.setForeground(new java.awt.Color(51, 255, 0));
        jL_bb_temp.setText("0");
        jPanel1.add(jL_bb_temp);
        jL_bb_temp.setBounds(40, 460, 50, 20);
        jPanel1.add(jL_pump_2);
        jL_pump_2.setBounds(40, 570, 40, 80);
        jPanel1.add(jL_pump3);
        jL_pump3.setBounds(145, 570, 40, 80);

        jL_bb_rh.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_bb_rh.setForeground(new java.awt.Color(255, 153, 0));
        jL_bb_rh.setText("0");
        jPanel1.add(jL_bb_rh);
        jL_bb_rh.setBounds(40, 490, 50, 30);

        jL_cc_temp.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_cc_temp.setForeground(new java.awt.Color(102, 255, 0));
        jL_cc_temp.setText("0");
        jPanel1.add(jL_cc_temp);
        jL_cc_temp.setBounds(200, 580, 60, 30);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/led-display.jpg"))); // NOI18N
        jLabel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel8);
        jLabel8.setBounds(30, 450, 99, 70);
        jPanel1.add(jL_de_pump1);
        jL_de_pump1.setBounds(950, 230, 60, 60);

        jL_underpump0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/under_pumps2_run_all.png"))); // NOI18N
        jPanel1.add(jL_underpump0);
        jL_underpump0.setBounds(20, 240, 170, 610);
        jPanel1.add(jL_gb_pump1);
        jL_gb_pump1.setBounds(650, 250, 60, 60);

        jL_zg_tank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/1_00.gif"))); // NOI18N
        jL_zg_tank.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jL_zg_tank);
        jL_zg_tank.setBounds(190, 240, 120, 126);

        jL_zg_pumps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/all1_pumps_stop.png"))); // NOI18N
        jPanel1.add(jL_zg_pumps);
        jL_zg_pumps.setBounds(310, 240, 173, 190);

        jL_gb_tank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/1_00.gif"))); // NOI18N
        jL_gb_tank.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jL_gb_tank);
        jL_gb_tank.setBounds(480, 230, 120, 130);
        jPanel1.add(jL_gb_pump2);
        jL_gb_pump2.setBounds(650, 370, 60, 60);

        jL_gb_pumps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/all1_pumps_stop.png"))); // NOI18N
        jPanel1.add(jL_gb_pumps);
        jL_gb_pumps.setBounds(600, 240, 173, 190);

        jL_de_h1.setBackground(new java.awt.Color(102, 255, 0));
        jL_de_h1.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_de_h1.setText("0");
        jL_de_h1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(153, 255, 51), new java.awt.Color(153, 255, 0), null, null));
        jPanel1.add(jL_de_h1);
        jL_de_h1.setBounds(830, 200, 60, 30);
        jPanel1.add(jL_de_pump2);
        jL_de_pump2.setBounds(950, 350, 60, 60);

        jL_de_tank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/1_00.gif"))); // NOI18N
        jL_de_tank.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jL_de_tank);
        jL_de_tank.setBounds(770, 230, 125, 126);

        jL_de_pumps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/all1_pumps0_stop.png"))); // NOI18N
        jPanel1.add(jL_de_pumps);
        jL_de_pumps.setBounds(900, 150, 173, 280);

        jL_de_rh.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_de_rh.setForeground(new java.awt.Color(255, 153, 0));
        jL_de_rh.setText("0");
        jPanel1.add(jL_de_rh);
        jL_de_rh.setBounds(810, 400, 80, 30);

        jL_1000_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/00.gif"))); // NOI18N
        jL_1000_1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jL_1000_1);
        jL_1000_1.setBounds(1080, 140, 183, 184);

        jL_1000_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/00.gif"))); // NOI18N
        jL_1000_2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jL_1000_2);
        jL_1000_2.setBounds(1080, 400, 180, 190);

        jL_de_temp.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_de_temp.setForeground(new java.awt.Color(102, 255, 51));
        jL_de_temp.setText("0");
        jPanel1.add(jL_de_temp);
        jL_de_temp.setBounds(810, 370, 60, 30);

        jL_gb_temp.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jL_gb_temp.setForeground(new java.awt.Color(0, 255, 0));
        jL_gb_temp.setText("0");
        jPanel1.add(jL_gb_temp);
        jL_gb_temp.setBounds(510, 370, 70, 30);

        jL_zg_h1.setBackground(new java.awt.Color(102, 255, 0));
        jL_zg_h1.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_zg_h1.setText("0");
        jL_zg_h1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(jL_zg_h1);
        jL_zg_h1.setBounds(240, 210, 60, 30);

        jL_zg_temp.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_zg_temp.setForeground(new java.awt.Color(0, 255, 0));
        jL_zg_temp.setText("0");
        jPanel1.add(jL_zg_temp);
        jL_zg_temp.setBounds(220, 380, 70, 30);

        jL_zg_rh.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_zg_rh.setForeground(new java.awt.Color(255, 153, 0));
        jL_zg_rh.setText("0");
        jPanel1.add(jL_zg_rh);
        jL_zg_rh.setBounds(220, 410, 70, 30);

        jL_gb_rh.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_gb_rh.setForeground(new java.awt.Color(255, 153, 0));
        jL_gb_rh.setText("0");
        jPanel1.add(jL_gb_rh);
        jL_gb_rh.setBounds(510, 400, 50, 30);

        jL_LCD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/led-display.jpg"))); // NOI18N
        jPanel1.add(jL_LCD);
        jL_LCD.setBounds(800, 360, 100, 80);

        jL_cc_rh.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_cc_rh.setForeground(new java.awt.Color(255, 153, 0));
        jL_cc_rh.setText("0");
        jPanel1.add(jL_cc_rh);
        jL_cc_rh.setBounds(200, 610, 40, 32);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/led-display.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(500, 360, 100, 80);

        jL_gb_h1.setBackground(new java.awt.Color(102, 255, 0));
        jL_gb_h1.setFont(new java.awt.Font("Mon Crystal 2", 1, 24)); // NOI18N
        jL_gb_h1.setText("0");
        jL_gb_h1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(jL_gb_h1);
        jL_gb_h1.setBounds(530, 200, 60, 30);

        jP_gobi.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 102, 102)));
        jP_gobi.setLayout(null);

        jL_gb_network.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/network_off.png"))); // NOI18N
        jP_gobi.add(jL_gb_network);
        jL_gb_network.setBounds(10, 20, 75, 60);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("ГОВЬ ӨРГӨХ СТАНЦ");
        jP_gobi.add(jLabel5);
        jLabel5.setBounds(100, 40, 160, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jP_gobi.add(jLabel6);
        jLabel6.setBounds(110, 50, 60, 30);

        jPanel1.add(jP_gobi);
        jP_gobi.setBounds(480, 20, 280, 100);

        jP_zeeg.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 102, 102)));
        jP_zeeg.setLayout(null);

        jL_zg_network.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/network_off.png"))); // NOI18N
        jP_zeeg.add(jL_zg_network);
        jL_zg_network.setBounds(10, 10, 80, 80);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("ЗЭЭГ ӨРГӨХ СТАНЦ");
        jP_zeeg.add(jLabel4);
        jLabel4.setBounds(100, 40, 150, 17);

        jPanel1.add(jP_zeeg);
        jP_zeeg.setBounds(190, 20, 280, 100);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/led-display.jpg"))); // NOI18N
        jPanel1.add(jLabel7);
        jLabel7.setBounds(210, 370, 100, 80);

        jL_1000_temp.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_1000_temp.setForeground(new java.awt.Color(102, 255, 0));
        jL_1000_temp.setText("0");
        jPanel1.add(jL_1000_temp);
        jL_1000_temp.setBounds(990, 530, 50, 30);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/led-display.jpg"))); // NOI18N
        jPanel1.add(jLabel9);
        jLabel9.setBounds(190, 560, 100, 90);

        jL_1000_rh.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_1000_rh.setForeground(new java.awt.Color(255, 153, 0));
        jL_1000_rh.setText("0");
        jPanel1.add(jL_1000_rh);
        jL_1000_rh.setBounds(990, 560, 50, 30);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/led-display.jpg"))); // NOI18N
        jPanel1.add(jLabel10);
        jLabel10.setBounds(980, 510, 100, 90);

        jP_cc.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 102, 102)));
        jP_cc.setLayout(null);

        jL_hudag3_network.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/network_off_jijig.png"))); // NOI18N
        jP_cc.add(jL_hudag3_network);
        jL_hudag3_network.setBounds(13, 14, 45, 34);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("ГХ 3");
        jP_cc.add(jLabel12);
        jLabel12.setBounds(70, 20, 40, 30);

        jPanel1.add(jP_cc);
        jP_cc.setBounds(190, 490, 120, 70);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("УСАН САН 1");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(1080, 320, 100, 30);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("УСАН САН 2 ");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(1080, 600, 100, 17);

        jP_1000.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 102, 102)));
        jP_1000.setLayout(null);

        jL_1000_network.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/network_off.png"))); // NOI18N
        jP_1000.add(jL_1000_network);
        jL_1000_network.setBounds(10, 20, 75, 57);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("1000-ын");
        jP_1000.add(jLabel16);
        jLabel16.setBounds(90, 30, 70, 17);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("САН");
        jP_1000.add(jLabel17);
        jLabel17.setBounds(110, 50, 31, 17);

        jPanel1.add(jP_1000);
        jP_1000.setBounds(1080, 20, 170, 100);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo.jpg"))); // NOI18N
        jLabel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel15);
        jLabel15.setBounds(10, 10, 96, 100);

        jPanel3.setBackground(new java.awt.Color(0, 204, 255));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 153, 255), new java.awt.Color(0, 153, 255), new java.awt.Color(0, 153, 255), new java.awt.Color(0, 153, 255)));
        jPanel3.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jL_hudag2_tolov.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jL_hudag2_tolov.setText("Худаг 2");

        jL_hudag3_tolov.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jL_hudag3_tolov.setText("Худаг 3");

        jL_de_tolov.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jL_de_tolov.setText("Дэнж");

        jL_gb_tolov.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jL_gb_tolov.setText("Говь");

        jL_zg_tolov.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jL_zg_tolov.setText("Зээг");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_gb_tolov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jL_zg_tolov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jL_de_tolov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jL_hudag3_tolov, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                    .addComponent(jL_hudag2_tolov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jL_hudag2_tolov, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jL_hudag3_tolov, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jL_de_tolov, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jL_gb_tolov, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jL_zg_tolov, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(jPanel4);
        jPanel4.setBounds(140, 10, 490, 150);

        chkAutoMode.setText("цагийн горим");
        chkAutoMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAutoModeActionPerformed(evt);
            }
        });
        jPanel3.add(chkAutoMode);
        chkAutoMode.setBounds(10, 10, 110, 23);

        buttonGroup5.add(chkAutoModeSan1);
        chkAutoModeSan1.setSelected(true);
        chkAutoModeSan1.setText("Сан-1");
        chkAutoModeSan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAutoModeSan1ActionPerformed(evt);
            }
        });
        jPanel3.add(chkAutoModeSan1);
        chkAutoModeSan1.setBounds(10, 40, 110, 23);

        buttonGroup5.add(chkAutoModeSan2);
        chkAutoModeSan2.setText("Сан-2");
        chkAutoModeSan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAutoModeSan2ActionPerformed(evt);
            }
        });
        jPanel3.add(chkAutoModeSan2);
        chkAutoModeSan2.setBounds(10, 70, 110, 23);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(330, 470, 640, 170);

        jL_1000_h1.setBackground(new java.awt.Color(153, 255, 51));
        jL_1000_h1.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_1000_h1.setText("0");
        jL_1000_h1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(jL_1000_h1);
        jL_1000_h1.setBounds(1190, 320, 60, 30);

        jL_1000h2.setBackground(new java.awt.Color(102, 255, 0));
        jL_1000h2.setFont(new java.awt.Font("Mon Crystal", 1, 24)); // NOI18N
        jL_1000h2.setText("0");
        jL_1000h2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(jL_1000h2);
        jL_1000h2.setBounds(1190, 590, 60, 30);

        jLAutoPilotStat.setText("Автомат ажиллагаа:");
        jPanel1.add(jLAutoPilotStat);
        jLAutoPilotStat.setBounds(350, 660, 270, 14);

        jTabbedPane1.addTab("Хяналтын самбар", jPanel1);

        ta_chat.setColumns(20);
        ta_chat.setRows(5);
        jScrollPane1.setViewportView(ta_chat);

        b_denjzalgah1.setText("Дэнж залгах-1");
        b_denjzalgah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_denjzalgah1ActionPerformed(evt);
            }
        });

        b_denjzalgah2.setText("Дэнж залгах-2");
        b_denjzalgah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_denjzalgah2ActionPerformed(evt);
            }
        });

        b_denjtaslah.setText("таслах");
        b_denjtaslah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_denjtaslahActionPerformed(evt);
            }
        });

        b_gobizalgah1.setText("Говь залгах-1");
        b_gobizalgah1.setPreferredSize(new java.awt.Dimension(107, 23));
        b_gobizalgah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_gobizalgah1ActionPerformed(evt);
            }
        });

        b_gobizalgah2.setText("Говь залгах-2");
        b_gobizalgah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_gobizalgah2ActionPerformed(evt);
            }
        });

        b_zeegzalgah2.setText("Зээг залгах-2");
        b_zeegzalgah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_zeegzalgah2ActionPerformed(evt);
            }
        });

        b_zeegzalgah1.setText("Зээг залгах-1");
        b_zeegzalgah1.setPreferredSize(new java.awt.Dimension(107, 23));
        b_zeegzalgah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_zeegzalgah1ActionPerformed(evt);
            }
        });

        b_hudagtaslah1.setText("Худаг№3 таслах");
        b_hudagtaslah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_hudagtaslah1ActionPerformed(evt);
            }
        });

        b_hudagzalgah1.setText("Худаг№3 залгах");
        b_hudagzalgah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_hudagzalgah1ActionPerformed(evt);
            }
        });

        b_hudagtaslah2.setText("Худаг№2 таслах");
        b_hudagtaslah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_hudagtaslah2ActionPerformed(evt);
            }
        });

        b_hudagzalgah2.setText("Худаг№2 залгах");
        b_hudagzalgah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_hudagzalgah2ActionPerformed(evt);
            }
        });

        b_gobitaslah.setText("таслах");
        b_gobitaslah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_gobitaslahActionPerformed(evt);
            }
        });

        b_zeegtaslah.setText("таслах");
        b_zeegtaslah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_zeegtaslahActionPerformed(evt);
            }
        });

        b_clear.setText("clear");
        b_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator6)
                    .addComponent(jSeparator4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59)
                                        .addComponent(b_clear))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(197, 197, 197)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(b_hudagzalgah2)
                                        .addGap(117, 117, 117)
                                        .addComponent(b_hudagtaslah2))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jRadioButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b_gobizalgah1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(b_gobitaslah)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(b_gobizalgah2))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(b_hudagzalgah1)
                                        .addGap(116, 116, 116)
                                        .addComponent(b_hudagtaslah1))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(jRadioButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_zeegzalgah1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b_zeegtaslah)
                                .addGap(26, 26, 26)
                                .addComponent(jRadioButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(b_zeegzalgah2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_denjzalgah1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b_denjtaslah)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_denjzalgah2)))
                        .addGap(0, 3526, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_clear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_denjzalgah1)
                        .addComponent(b_denjtaslah))
                    .addComponent(jRadioButton1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jRadioButton2)
                        .addComponent(b_denjzalgah2)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_gobizalgah1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_gobitaslah))
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRadioButton4)
                        .addComponent(b_gobizalgah2)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jRadioButton6)
                                .addComponent(b_zeegzalgah2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(b_zeegtaslah)
                                .addComponent(b_zeegzalgah1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(b_hudagzalgah2)
                                    .addComponent(b_hudagtaslah2)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(b_hudagzalgah1)
                                    .addComponent(b_hudagtaslah1))
                                .addGap(83, 83, 83))))
                    .addComponent(jRadioButton5))
                .addGap(147, 147, 147))
        );

        jTabbedPane1.addTab("Удирдлагын самбар", jPanel2);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel7.setToolTipText("");
        jPanel7.setLayout(new java.awt.BorderLayout(10, 0));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Сүүлд уншигдсан тооолуурын заалтууд");
        jPanel7.add(jLabel22, java.awt.BorderLayout.PAGE_START);

        jPanel9.setPreferredSize(new java.awt.Dimension(4265, 153));
        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.X_AXIS));

        jPanel10.setLayout(new java.awt.BorderLayout());

        jLabel20.setText("Худаг №3");
        jPanel13.add(jLabel20);

        bPump1Refresh.setText("шинэчлэх");
        bPump1Refresh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bPump1Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPump1RefreshActionPerformed(evt);
            }
        });
        jPanel13.add(bPump1Refresh);

        jPanel10.add(jPanel13, java.awt.BorderLayout.PAGE_START);

        jtPumpLast3.setModel(pump1Model);
        jtPumpLast3.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(jtPumpLast3);
        jtPumpLast3.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanel10.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel9.add(jPanel10);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel26.setText("Худаг №2");
        jPanel12.add(jLabel26);

        bPump2Refresh.setText("шинэчлэх");
        bPump2Refresh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bPump2Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPump2RefreshActionPerformed(evt);
            }
        });
        jPanel12.add(bPump2Refresh);

        jPanel11.add(jPanel12, java.awt.BorderLayout.PAGE_START);

        jtPumpLast4.setModel(pump2Model);
        jScrollPane4.setViewportView(jtPumpLast4);
        jtPumpLast4.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanel11.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jPanel9.add(jPanel11);

        jPanel7.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.Y_AXIS));

        pumpSearchStartDate.setText("jTextField1");
        pumpSearchStartDate.setNextFocusableComponent(pumpSearchEndDate);

        jLabel18.setText("Эхлэх огноо");

        pumpSearchEndDate.setText("jTextField2");
        pumpSearchEndDate.setNextFocusableComponent(jRadioTooluurSearchHudag1);

        jLabel19.setText("Дуусах огноо");

        pumpSearchBtn.setText("Шүүх");
        pumpSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pumpSearchBtnActionPerformed(evt);
            }
        });

        tooluurSearchHudagSelector.add(jRadioTooluurSearchHudag1);
        jRadioTooluurSearchHudag1.setText("Худаг №1");
        jRadioTooluurSearchHudag1.setNextFocusableComponent(jRadioTooluurSearchHudag2);
        jRadioTooluurSearchHudag1.setOpaque(false);

        tooluurSearchHudagSelector.add(jRadioTooluurSearchHudag2);
        jRadioTooluurSearchHudag2.setText("Худаг №2");
        jRadioTooluurSearchHudag2.setNextFocusableComponent(pumpSearchBtn);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pumpSearchStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(pumpSearchEndDate))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioTooluurSearchHudag2)
                    .addComponent(jRadioTooluurSearchHudag1))
                .addGap(47, 47, 47)
                .addComponent(pumpSearchBtn)
                .addContainerGap(3856, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jRadioTooluurSearchHudag1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioTooluurSearchHudag2))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pumpSearchStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pumpSearchEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19)))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(pumpSearchBtn)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel8);

        jTablePumpArchive.setModel(pumpArchiveModel);
        jScrollPane2.setViewportView(jTablePumpArchive);
        jTablePumpArchive.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanel5.add(jScrollPane2);

        jTabbedPane2.addTab("Архив", jPanel5);

        jPanel6.add(jTabbedPane2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Тоолуур", jPanel6);

        jPanel14.setLayout(new java.awt.BorderLayout());

        jLabel21.setText("Шүүх мөрийн тоо");

        jtLogRows.setText("100");

        logSearchBtn.setText("Шүүх");
        logSearchBtn.setToolTipText("");
        logSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logSearchBtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Төхөөрөмжийн лог");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel23))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(jtLogRows, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(logSearchBtn)))
                .addContainerGap(459, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jtLogRows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logSearchBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14.add(jPanel15, java.awt.BorderLayout.PAGE_START);

        logTable.setModel(logTableModel);
        jScrollPane5.setViewportView(logTable);
        logTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanel14.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Log", jPanel14);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1274, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_denjzalgah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_denjzalgah1ActionPerformed
        if (jRadioButton1.isSelected()) {
            denjRun = false;
             sendMessage("de", "II", 3500L); // inverter off
             sendMessage("de", "FF", 800L);// contactor off
             sendMessage("de", "EE", 1000L);// contactor1 on
             sendMessage("de", "HH", 1L);// inverter on
        }
    }//GEN-LAST:event_b_denjzalgah1ActionPerformed

    private void b_denjzalgah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_denjzalgah2ActionPerformed
        if (jRadioButton2.isSelected() ) {
            denjRun = false;
            sendMessage("de", "II", 3500L);// inverter off
            sendMessage("de", "FF", 800L); // contactor off
            sendMessage("de", "GG", 800L);// contactor2 on
            sendMessage("de", "HH", 1L);// inverter on
        }
    }//GEN-LAST:event_b_denjzalgah2ActionPerformed

    private void b_denjtaslahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_denjtaslahActionPerformed
        sendMessage("de", "II", 3500L);
        sendMessage("de", "FF", 1L);
        denjRun=true;
    }//GEN-LAST:event_b_denjtaslahActionPerformed

    private void b_gobizalgah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_gobizalgah1ActionPerformed
        if (jRadioButton3.isSelected()) {
            gobiRun=false;
            sendMessage("gb", "NN", 3500L);
            sendMessage("gb", "KK", 1000L);
            sendMessage("gb", "JJ", 1000L);
            sendMessage("gb", "MM", 1L);
        }
    }//GEN-LAST:event_b_gobizalgah1ActionPerformed

    private void b_gobizalgah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_gobizalgah2ActionPerformed
        if (jRadioButton4.isSelected()) {
            gobiRun=false;
            sendMessage("gb", "NN", 3500L);
            sendMessage("gb", "KK", 1000L);
            sendMessage("gb", "LL", 800L);
            sendMessage("gb", "MM", 1L);
        }
    }//GEN-LAST:event_b_gobizalgah2ActionPerformed

    private void b_zeegzalgah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_zeegzalgah2ActionPerformed
        if (jRadioButton6.isSelected()) {
            zeegRun=false;
            sendMessage("zg", "SS", 3500L);
            sendMessage("zg", "PP", 1000L);
            sendMessage("zg", "QQ", 800L);
            sendMessage("zg", "RR", 1L);
        }
    }//GEN-LAST:event_b_zeegzalgah2ActionPerformed

    private void b_zeegzalgah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_zeegzalgah1ActionPerformed
        if (jRadioButton5.isSelected()) {
            sendMessage("zg", "SS", 3500L);
            sendMessage("zg", "PP", 1000L);
            sendMessage("zg", "OO", 800L);
            sendMessage("zg", "RR", 1L);
        }
    }//GEN-LAST:event_b_zeegzalgah1ActionPerformed

    private void b_hudagtaslah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_hudagtaslah1ActionPerformed
        sendMessage("cc", "BB", 1L);
    }//GEN-LAST:event_b_hudagtaslah1ActionPerformed

    private void b_hudagzalgah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_hudagzalgah1ActionPerformed
         sendMessage("cc", "AA", 1L);
    }//GEN-LAST:event_b_hudagzalgah1ActionPerformed

    private void b_hudagtaslah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_hudagtaslah2ActionPerformed
        sendMessage("bb", "DD", 0L);
    }//GEN-LAST:event_b_hudagtaslah2ActionPerformed

    private void b_hudagzalgah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_hudagzalgah2ActionPerformed
        sendMessage("bb", "CC", 0L);
    }//GEN-LAST:event_b_hudagzalgah2ActionPerformed

    private void b_gobitaslahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_gobitaslahActionPerformed
        gobiRun=true;
        sendMessage("gb", "NN", 3500L);
        sendMessage("gb", "KK", 1L);
    }//GEN-LAST:event_b_gobitaslahActionPerformed

    private void b_zeegtaslahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_zeegtaslahActionPerformed
        zeegRun=true;
        sendMessage("zg", "SS", 3500L);
        sendMessage("zg", "PP", 1L);
    }//GEN-LAST:event_b_zeegtaslahActionPerformed

    private void b_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clearActionPerformed
        ta_chat.setText(" ");

    }//GEN-LAST:event_b_clearActionPerformed

    private void bPump1RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPump1RefreshActionPerformed
        PumpData data = PumpDataReader.read("1");
        new UIUpdater(this).addPumpData(data);
    }//GEN-LAST:event_bPump1RefreshActionPerformed

    private void bPump2RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPump2RefreshActionPerformed
        PumpData data = PumpDataReader.read("2");
        new UIUpdater(this).addPumpData(data);
    }//GEN-LAST:event_bPump2RefreshActionPerformed

    private void pumpSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pumpSearchBtnActionPerformed
        if (pumpSearchStartDate.getText() == null || pumpSearchEndDate.getText() == null) {
            return;
        }

        LocalDate startDate = LocalDate.parse(pumpSearchStartDate.getText(), DateTimeFormatter.ISO_DATE);
        LocalDate endDate   = LocalDate.parse(pumpSearchEndDate.getText(),   DateTimeFormatter.ISO_DATE);

        Logger logger = null;
        if (jRadioTooluurSearchHudag1.isSelected()) {
            logger = PumpDataReader.pumpLogger1;
        }

        if (jRadioTooluurSearchHudag2.isSelected()) {
            logger = PumpDataReader.pumpLogger2;
        }

        if (logger == null || startDate == null || endDate == null) {
            return;
        }

        List<PumpData> datas = logger.lines().stream()
                .map(PumpData::fromStr)
                .collect(Collectors.toList());

        List<PumpData> filtered = new ArrayList<>();
        for (PumpData data : datas) {
            LocalDate date = data.getReadAt().toLocalDateTime().toLocalDate();
            if (date.isBefore(startDate) || date.isAfter(endDate)) {
                continue;
            }

            filtered.add(data);
        }

        pumpArchiveModel.values.clear();
        pumpArchiveModel.values.addAll(filtered);
        jTablePumpArchive.updateUI();
    }//GEN-LAST:event_pumpSearchBtnActionPerformed

    private void logSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logSearchBtnActionPerformed
        int lineCount = Integer.parseInt(jtLogRows.getText());
        if (lineCount > 0) {
            List<Log> logs = Client.logger.tail(lineCount).stream()
                .map(Log::fromStr)
                .collect(Collectors.toList());

            logTableModel.values.clear();
            logTableModel.values.addAll(logs);

            logTable.updateUI();
        }
    }//GEN-LAST:event_logSearchBtnActionPerformed

    private void chkAutoModeSan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAutoModeSan1ActionPerformed
        updateAutoMode();
    }//GEN-LAST:event_chkAutoModeSan1ActionPerformed

    private void chkAutoModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAutoModeActionPerformed
        updateAutoMode();
    }//GEN-LAST:event_chkAutoModeActionPerformed

    private void chkAutoModeSan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAutoModeSan2ActionPerformed
        updateAutoMode();
    }//GEN-LAST:event_chkAutoModeSan2ActionPerformed

    private void updateAutoMode() {
        autoPilot.setAutoPilot(chkAutoMode.isSelected());
        autoPilot.setToTank1(chkAutoModeSan1.isSelected());
        autoPilot.setToTank2(chkAutoModeSan2.isSelected());
    }

    Timer timerD=new Timer(1500, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent ae) {
            sendMessage("de", "z", 1L);//To change body of generated methods, choose Tools | Templates.
        }
    });

    public void startServer() {
        Server server = new Server(this, clients);
        Thread thread = new Thread(server);
        thread.start();

        PumpDataReader dataReader = new PumpDataReader(new UIUpdater(this));
        ScheduledExecutorService ex = Executors.newSingleThreadScheduledExecutor();
        ex.scheduleWithFixedDelay(dataReader, 10, 10, TimeUnit.SECONDS);

        jRadioTooluurSearchHudag1.setSelected(true);

        LocalDate now = LocalDate.now();
        LocalDate before = now.minusWeeks(2L);

        pumpSearchStartDate.setText(before.format(DateTimeFormatter.ISO_DATE));
        pumpSearchEndDate.setText(now.format(DateTimeFormatter.ISO_DATE));

        autoPilot = new AutoPilot(new UIUpdater(this), clients);
        updateAutoMode();

        ex = Executors.newSingleThreadScheduledExecutor();
        ex.scheduleWithFixedDelay(autoPilot, 10, 10, TimeUnit.SECONDS);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainForm form = new MainForm();
                form.startServer();
                form.setVisible(true);
            }
        });
    }

    public void tellEveryone(String msg) {
        sendMessage(msg, msg, 0L);
    }

    public void tellEveryone(String msg, long sleepTime) {
        sendMessage(msg, msg, sleepTime);
    }

    public void sendMessage(String code, String message, long sleepTime) {
        Client client = clients.get(code);
        if (client != null) {
            client.send(message);

            if (sleepTime != 0L) {
                try {
                    Thread.sleep(sleepTime);
                } catch (Exception e) {
                    //e.printStackTrace();
                }
            }
        } else {
            ta_chat.append("sendMessage : can not find client with code : '" + code + "'\n");
            Client.log(new Log(code, "sendMsg", "can not find client with code : '" + code + "'"));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bPump1Refresh;
    private javax.swing.JButton bPump2Refresh;
    private static javax.swing.JButton b_clear;
    private static javax.swing.JButton b_denjtaslah;
    private static javax.swing.JButton b_denjzalgah1;
    private static javax.swing.JButton b_denjzalgah2;
    private static javax.swing.JButton b_gobitaslah;
    private static javax.swing.JButton b_gobizalgah1;
    private static javax.swing.JButton b_gobizalgah2;
    private static javax.swing.JButton b_hudagtaslah1;
    private static javax.swing.JButton b_hudagtaslah2;
    private static javax.swing.JButton b_hudagzalgah1;
    private static javax.swing.JButton b_hudagzalgah2;
    private static javax.swing.JButton b_zeegtaslah;
    private static javax.swing.JButton b_zeegzalgah1;
    private static javax.swing.JButton b_zeegzalgah2;
    private static javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private static javax.swing.JCheckBox chkAutoMode;
    private static javax.swing.JCheckBox chkAutoModeSan1;
    private static javax.swing.JCheckBox chkAutoModeSan2;
    private javax.swing.JLabel jLAutoPilotStat;
    private static javax.swing.JLabel jL_1000_1;
    private static javax.swing.JLabel jL_1000_2;
    private static javax.swing.JLabel jL_1000_h1;
    private static javax.swing.JLabel jL_1000_network;
    private static javax.swing.JLabel jL_1000_rh;
    private static javax.swing.JLabel jL_1000_temp;
    private static javax.swing.JLabel jL_1000h2;
    private static javax.swing.JLabel jL_LCD;
    private static javax.swing.JLabel jL_bb_rh;
    private static javax.swing.JLabel jL_bb_temp;
    private static javax.swing.JLabel jL_cc_rh;
    private static javax.swing.JLabel jL_cc_temp;
    private static javax.swing.JLabel jL_de_h1;
    private static javax.swing.JLabel jL_de_network;
    private static javax.swing.JLabel jL_de_pump1;
    private static javax.swing.JLabel jL_de_pump2;
    private static javax.swing.JLabel jL_de_pumps;
    private static javax.swing.JLabel jL_de_rh;
    private static javax.swing.JLabel jL_de_tank;
    private static javax.swing.JLabel jL_de_temp;
    private static javax.swing.JLabel jL_de_tolov;
    private static javax.swing.JLabel jL_gb_h1;
    private static javax.swing.JLabel jL_gb_network;
    private static javax.swing.JLabel jL_gb_pump1;
    private static javax.swing.JLabel jL_gb_pump2;
    private static javax.swing.JLabel jL_gb_pumps;
    private static javax.swing.JLabel jL_gb_rh;
    private static javax.swing.JLabel jL_gb_tank;
    private static javax.swing.JLabel jL_gb_temp;
    private static javax.swing.JLabel jL_gb_tolov;
    private static javax.swing.JLabel jL_hudag2_network;
    private static javax.swing.JLabel jL_hudag2_tolov;
    private javax.swing.JLabel jL_hudag3_network;
    private static javax.swing.JLabel jL_hudag3_tolov;
    private static javax.swing.JLabel jL_pump3;
    private javax.swing.JLabel jL_pump_2;
    private static javax.swing.JLabel jL_underpump0;
    private static javax.swing.JLabel jL_zg_h1;
    private static javax.swing.JLabel jL_zg_network;
    private static javax.swing.JLabel jL_zg_pump1;
    private static javax.swing.JLabel jL_zg_pump2;
    private javax.swing.JLabel jL_zg_pumps;
    private static javax.swing.JLabel jL_zg_rh;
    private static javax.swing.JLabel jL_zg_tank;
    private static javax.swing.JLabel jL_zg_temp;
    private static javax.swing.JLabel jL_zg_tolov;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private static javax.swing.JPanel jP_1000;
    private static javax.swing.JPanel jP_bb;
    private static javax.swing.JPanel jP_cc;
    private static javax.swing.JPanel jP_de;
    private static javax.swing.JPanel jP_gobi;
    private javax.swing.JPanel jP_zeeg;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private static javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private static javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioTooluurSearchHudag1;
    private javax.swing.JRadioButton jRadioTooluurSearchHudag2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTablePumpArchive;
    private javax.swing.JTextField jtLogRows;
    private javax.swing.JTable jtPumpLast3;
    private javax.swing.JTable jtPumpLast4;
    private javax.swing.JButton logSearchBtn;
    private javax.swing.JTable logTable;
    private javax.swing.JButton pumpSearchBtn;
    private javax.swing.JTextField pumpSearchEndDate;
    private javax.swing.JTextField pumpSearchStartDate;
    private static javax.swing.JTextArea ta_chat;
    private javax.swing.ButtonGroup tooluurSearchHudagSelector;
    private static javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables

    public static class UIUpdateRunnable implements Runnable {
        private UIUpdater updater;
        private ClientMsg msg;
        private String log;
        private PumpData[] pumpDatas;

        private String autoPilotStatus;

        public UIUpdateRunnable(UIUpdater updater) {
            this.updater = updater;
        }

        public UIUpdateRunnable(UIUpdater updater, ClientMsg msg) {
            this.updater = updater;
            this.msg = msg;
        }

        public UIUpdateRunnable(UIUpdater updater, String log) {
            this.updater = updater;
            this.log = log;
        }

        public UIUpdateRunnable(UIUpdater updater, PumpData ... datas) {
            this.updater = updater;
            this.pumpDatas = datas;
        }

        @Override
        public void run() {
            if (msg != null) {
                updater.updateUI(msg);
            }

            if (log != null) {
                updater.addLog(log);
            }

            if (pumpDatas != null) {
                updater.addPumpData(pumpDatas);
            }

            if (autoPilotStatus != null) {
                updater.updateAutoPilotStatus(autoPilotStatus);
            }
        }
    }

    public static class UIUpdater {
        private MainForm mainForm;

        private int zeegCnt;
        private int gobiCnt;

        public UIUpdater(MainForm mainForm) {
            this.mainForm = mainForm;
        }

        public void queueAutoPilotStatus(String status) {
            UIUpdateRunnable r = new UIUpdateRunnable(this);
            r.autoPilotStatus = status;
            SwingUtilities.invokeLater(r);
        }

        public void updateAutoPilotStatus(String status) {
            mainForm.jLAutoPilotStat.setText("Автомат ажиллагаа: " + status);
            System.out.println("updateAutoPilotStatus : " + status);
        }

        public void queueLog(String log) {
            SwingUtilities.invokeLater(new UIUpdateRunnable(this, log));
        }

        public void addLog(String log) {
            mainForm.ta_chat.append(log + "\n");
            System.out.println("message "+log);
        }

        public void queuePumpData(PumpData ... datas) {
            SwingUtilities.invokeLater(new UIUpdateRunnable(this, datas));
        }

        public void addPumpData(PumpData ... datas) {
            for (PumpData data : datas) {
                if (data != null) {
                    if ("1".equals(data.getPumpCode())) {
                        mainForm.pump1Model.values.add(0, data);
                    } else if ("2".equals(data.getPumpCode())) {
                        mainForm.pump2Model.values.add(0, data);
                    }
                }
            }

            while (mainForm.pump1Model.values.size() > 3) {
                mainForm.pump1Model.values.remove(mainForm.pump1Model.values.size() - 1);
            }

            while (mainForm.pump2Model.values.size() > 3) {
                mainForm.pump2Model.values.remove(mainForm.pump2Model.values.size() - 1);
            }

            mainForm.jtPumpLast3.updateUI();
            mainForm.jtPumpLast4.updateUI();
        }

        // Client болон бусад thread-үүд энэ функцийг дуудаж
        // mainForm-г update хийлгэх хүсэлтээ бүртгүүлнэ
        public void queue(ClientMsg msg) {
            SwingUtilities.invokeLater(new UIUpdateRunnable(this, msg));
        }

        // Гол функц, Component-уудын төлөвийг өөрчлөнө.
        // Энэ функцийг гэхдээ зөвхөн main thread л дуудна
        public void updateUI(ClientMsg msg) {
            switch(msg.getCode()) {
                case "cc" : hudag1((HudagMsg) msg); break;
                case "bb" : hudag2((HudagMsg) msg); break;
                case "zg" : zeeg(  (ZeegMsg)  msg); break;
                case "gb" : gobi(  (GobiMsg)  msg); break;
                case "de" : denj(  (DenjMsg)  msg); break;
                case "myng" : myanga((MyangaMsg)  msg);  break;
            }
        }

        public void hudag1(HudagMsg msg) {
            if (msg.getType() == ClientMsg.TYPE_START) {
                startImage(mainForm.jL_hudag3_network, mainForm.jP_cc);
            } else if (msg.getType() == ClientMsg.TYPE_STOP) {
                stopImage(mainForm.jL_hudag3_network, mainForm.jP_cc);
            } else {
                jL_cc_temp.setText( String.format("%.1f", msg.getTemp()));
                jL_cc_rh.setText(   String.format("%.0f", msg.getRh()));
            }

            System.out.println(msg.getInverter());

            if (msg.getInverter()>100) {
                setImageLabel(mainForm.jL_pump3,"pump_run_saaral.gif");
                jL_hudag3_tolov.setText("Худаг 3 залгасан.");
            } else{
                setImageLabelNull(mainForm.jL_pump3);
                jL_hudag3_tolov.setText("Худаг 3 салгасан.");
            }
        }

        public void hudag2(HudagMsg msg) {
            if (msg.getType() == ClientMsg.TYPE_START) {
                startImage(mainForm.jL_hudag2_network, mainForm.jP_bb);
                return;
            }

            if (msg.getType() == ClientMsg.TYPE_STOP) {
                stopImage(mainForm.jL_hudag2_network, mainForm.jP_bb);
                return;
            }

            jL_bb_temp.setText( String.format("%.1f", msg.getTemp()));
            jL_bb_rh.setText(   String.format("%.0f", msg.getRh()));

            if ("?".equals(msg.getPortb())) {
                System.out.println(msg.getPortb());
                txt.setText("худаг2 салгасан.");
                jL_hudag2_tolov.setText("Худаг 2 салгасан.");
                setImageLabelNull(mainForm.jL_pump_2);
            }

            if (">".equals(msg.getPortb())) {
                System.out.println("hudag2 running");
                txt.setText("худаг2 залгасан.");
                jL_hudag2_tolov.setText("Худаг 2 залгасан.");
                setImageLabel(mainForm.jL_pump_2,"pump_run_saaral.gif");
            }
        }

        public void zeeg(ZeegMsg msg) {
            if (msg.getType() == ClientMsg.TYPE_START) {
                startImage(mainForm.jL_zg_network, mainForm.jP_zeeg);
                return;
            }

            if (msg.getType() == ClientMsg.TYPE_STOP) {
                stopImage(mainForm.jL_zg_network, mainForm.jP_zeeg);
                return;
            }
               if(msg.getInverter()>100d){System.out.println("Зээг ажиллаж байна.");}
               else{System.out.println("Зээг зогсож байна.");}

            if("?".equals(msg.getPortb()) || msg.getInverter()<100){
                jL_zg_tolov.setText("Зээг зогсож байна.");
                setImageLabel(mainForm.jL_zg_pumps, "all1_pumps_stop.png");
                setImageLabelNull(mainForm.jL_zg_pump1);
                setImageLabelNull(mainForm.jL_zg_pump2);
                //setImageLabel(mainForm.jL_zg_pump1, "Nasos_pump_run.gif");
                //setImageLabel(mainForm.jL_zg_pump2, "Nasos_pump_run.gif");
            }
            if("=".equals(msg.getPortb()) && msg.getInverter()>100 ){
                jL_zg_tolov.setText("Зээг насос 1 байна.");
                setImageLabel(mainForm.jL_zg_pumps, "all1_pumps1_run.png");
                setImageLabel(mainForm.jL_zg_pump1, "Nasos_pump_run.gif");
            }
            if(";".equals(msg.getPortb()) && msg.getInverter()>100 ){
                jL_zg_tolov.setText("Зээг насос 2 байна.");
                setImageLabel(mainForm.jL_zg_pumps, "all1_pumps2_run.png");
                setImageLabel(mainForm.jL_zg_pump2, "Nasos_pump_run.gif");
            }
             if("=".equals(msg.getPortb()) && msg.getInverter()<100 ){
                jL_zg_tolov.setText("Зээг насос 1  пускатель залгаатай.");

            }
            if(";".equals(msg.getPortb()) && msg.getInverter()<100 ){
                jL_zg_tolov.setText("Зээг насос 2  пускатель залгаатай.");

            }


            if (msg.getH1() >= 2.97d) {
                zeegCnt ++;
            } else {
                zeegCnt = 0;
            }

            if (zeegCnt > 10 && msg.getH1() >= 2.97d) {
                mainForm.tellEveryone("DD");
                zeegCnt = 0;
            }



            jL_zg_h1.  setText(String.format("%.2f", msg.getH1()));
            jL_zg_temp.setText(String.format("%.1f", msg.getTemp()));
            jL_zg_rh.  setText(String.format("%.0f", msg.getRh()));

            String imageCode = getImageCode(msg.getH1(), 0.0d, ZeegMsg.maxH1);
            setImage(jL_zg_tank,"1_"+ imageCode);
        }

        public void gobi(GobiMsg msg) {
            if (msg.getType() == ClientMsg.TYPE_START) {
                startImage(mainForm.jL_gb_network, mainForm.jP_gobi);
                return;
            }

            if (msg.getType() == ClientMsg.TYPE_STOP) {
                stopImage(mainForm.jL_gb_network, mainForm.jP_gobi);
                return;
            }
            if("?".equals(msg.getPortb()) || msg.getInverter()<100){
                jL_gb_tolov.setText("Говь зогсож байна.");
                setImageLabel(mainForm.jL_gb_pumps, "all1_pumps_stop.png");
                setImageLabelNull(mainForm.jL_gb_pump1);
                setImageLabelNull(mainForm.jL_gb_pump2);
            }
            if("=".equals(msg.getPortb()) && msg.getInverter()>100 ){
                jL_gb_tolov.setText("Говь насос 1 явж байна.");
                setImageLabel(mainForm.jL_gb_pumps, "all1_pumps1_run.png");
                setImageLabel(mainForm.jL_gb_pump1, "Nasos_pump_run.gif");
            }
            if(";".equals(msg.getPortb()) && msg.getInverter()>100 ){
                jL_gb_tolov.setText("Говь насос 2 явж байна.");
                setImageLabel(mainForm.jL_gb_pumps, "all1_pumps2_run.png");
                setImageLabel(mainForm.jL_gb_pump2, "Nasos_pump_run.gif");
            }
            if("=".equals(msg.getPortb()) && msg.getInverter()<100 ){
                jL_gb_tolov.setText("Говь насос 1 пускатель залгаатай.");

            }
            if(";".equals(msg.getPortb()) && msg.getInverter()<100 ){
                jL_gb_tolov.setText("Говь насос 2 пускатель залгаатай.");

            }

            if (msg.getH1() < 0.15d) {
                gobiCnt++;
            } else {
                gobiCnt=0;
            }

            if (gobiCnt > 10) {
                gobiCnt = 0;
            }

            if(msg.getH1() <= 2.85d && msg.getH1() > 3.0d) {
                gobiCnt++;
            } else {
                gobiCnt=0;
            }

            if(msg.getP1()<15){}

            jL_gb_h1.  setText(String.format("%.2f", msg.getH1()));
            jL_gb_temp.setText(String.format("%.1f", msg.getTemp()));
            jL_gb_rh.  setText(String.format("%.0f", msg.getRh()));

            String imageCode = getImageCode(msg.getH1(), 0.0d, GobiMsg.maxH1);
            setImage(jL_gb_tank,"1_"+ imageCode);
        }

        public void denj(DenjMsg msg) {
            if (msg.getType() == ClientMsg.TYPE_START) {
                startImage(mainForm.jL_de_network, mainForm.jP_de);
                return;
            }

            if (msg.getType() == ClientMsg.TYPE_STOP) {
                stopImage(mainForm.jL_de_network, mainForm.jP_de);
                return;
            }
            if("?".equals(msg.getPortb()) || msg.getInverter()<100){
                jL_de_tolov.setText("Дэнж зогсож байна.");
                setImageLabel(mainForm.jL_de_pumps, "all1_pumps0_stop.png");
                setImageLabelNull(mainForm.jL_de_pump1);
                setImageLabelNull(mainForm.jL_de_pump2);
            }
            if("=".equals(msg.getPortb()) && msg.getInverter()>100 ){
                jL_de_tolov.setText("Дэнж насос 1 явж байна.");
                setImageLabel(mainForm.jL_de_pumps, "all1_pumps10_run.png");
                setImageLabel(mainForm.jL_de_pump1, "Nasos_pump_run.gif");
            }
            if(">".equals(msg.getPortb()) && msg.getInverter()>100 ){
                jL_de_tolov.setText("Дэнж насос 2 явж байна.");
                setImageLabel(mainForm.jL_de_pumps, "all1_pumps20_run.png");
                setImageLabel(mainForm.jL_de_pump2, "Nasos_pump_run.gif");
            }
            if("=".equals(msg.getPortb()) && msg.getInverter()<100 ){
                jL_de_tolov.setText("Дэнж насос 1 пускатель залгаатай.");

            }
            if(">".equals(msg.getPortb()) && msg.getInverter()<100 ){
                jL_de_tolov.setText("Дэнж насос 2 пускатель залгаатай.");

            }

            jL_de_h1.  setText(String.format("%.2f", msg.getH1()));
            jL_de_temp.setText(String.format("%.1f", msg.getTemp()));
            jL_de_rh.  setText(String.format("%.0f", msg.getRh()));

           // if(msg.getH1()<0.5d){mainForm.sendMessage("de", "", SOMEBITS);}

            String imageCode = getImageCode(msg.getH1(), 0.0d, DenjMsg.maxH1);
            setImage(jL_de_tank,"1_" + imageCode);
        }

        public void myanga(MyangaMsg msg) {
            if (msg.getType() == ClientMsg.TYPE_START) {
                startImage(mainForm.jL_1000_network, mainForm.jP_1000);
                return;
            }

            if (msg.getType() == ClientMsg.TYPE_STOP) {
                stopImage(mainForm.jL_1000_network, mainForm.jP_1000);
                return;
            }

            jL_1000_h1.  setText(String.format("%.2f", msg.getH1()));
            jL_1000h2.   setText(String.format("%.2f", msg.getH2()));
            jL_1000_temp.setText(String.format("%.1f", msg.getTemp()));
            jL_1000_rh.  setText(String.format("%.0f", msg.getRh()));

            String imageCode = getImageCode(msg.getH1(), 0.0d, MyangaMsg.maxH1);
            setImage(jL_1000_1, imageCode);

            imageCode = getImageCode(msg.getH2(), 0.0d, MyangaMsg.maxH1);
            setImage(jL_1000_2, imageCode);
        }

        private static void startImage(JLabel label, JPanel panel) {
            label.setIcon(new ImageIcon(MainForm.class.getResource("/image/network_on_jijig.png")));
            panel.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0,153,255)));
        }

        private static void stopImage(JLabel label, JPanel panel) {
            label.setIcon(new ImageIcon(MainForm.class.getResource("/image/network_off_jijig.png")));
            panel.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(255,0,0)));
        }

        private static void setImage(JLabel label, String code) {
            String imageUrl = "/image/" + code + ".gif";
            label.setIcon(new ImageIcon(MainForm.class.getResource(imageUrl)));
        }
        private static void setImageLabel(JLabel label, String code) {
            String imageUrl = "/image/" + code;
            label.setIcon(new ImageIcon(MainForm.class.getResource(imageUrl)));
        }
        private static void setImageLabelNull(JLabel label) {

            label.setIcon(null);
        }

        private static String getImageCode(double value, double min, double max) {
            if (value <= min) {
                return "00";
            }

            if (value >= max) {
                return "100";
            }

            int pct = (int) (value * 20d / max);
            return String.format("%02d", pct * 5);
        }
    }

    public static class PumpDataTableModel extends AbstractTableModel {
        private static final SimpleDateFormat FULL = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        private static final SimpleDateFormat DATE = new SimpleDateFormat("yyyy-MM-dd");
        private static final SimpleDateFormat TIME = new SimpleDateFormat("HH:mm:ss");
        private static final DecimalFormat df = new DecimalFormat("#,##0.000");

        private boolean withPumpCode;

        private List<PumpData> values = new ArrayList<>();

        public PumpDataTableModel(boolean withPumpCode) {
            this.withPumpCode = withPumpCode;
        }

        @Override
        public int getRowCount() {
            return values.size();
        }

        @Override
        public int getColumnCount() {
            return withPumpCode ? 5 : 3;
        }

        @Override
        public String getColumnName(int col) {
            col = withPumpCode ? col : col + 2;

            switch (col) {
                case 0 : return "Худаг";
                case 1 : return "Огноо";
                case 2 : return "Цаг минут";
                case 3 : return "Тоолуурын заалт";
                case 4 : return "Урсац";
            }

            return "col" + col;
        }

        @Override
        public Class getColumnClass(int c) {
            return String.class;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            PumpData data = values.get(rowIndex);

            columnIndex = withPumpCode ? columnIndex : columnIndex + 2;
            switch (columnIndex) {
                case 0 : return data.getPumpCode();
                case 1 : return DATE.format(data.getReadAt());
                case 2 : return TIME.format(data.getReadAt());
                case 3 : return df.format(data.getCounterValue());
                case 4 : return df.format(data.getFlowRate());
            }

            return null;
        }

    }

    public static class LogTableModel extends AbstractTableModel {
        private static final SimpleDateFormat FULL = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        private static final SimpleDateFormat DATE = new SimpleDateFormat("yyyy-MM-dd");
        private static final SimpleDateFormat TIME = new SimpleDateFormat("HH:mm:ss");
        private static final DecimalFormat df = new DecimalFormat("#,##0.000");

        private List<Log> values = new ArrayList<>();

        public LogTableModel() {
        }

        @Override
        public int getRowCount() {
            return values.size();
        }

        @Override
        public int getColumnCount() {
            return 5;
        }

        @Override
        public String getColumnName(int col) {
            switch (col) {
                case 0 : return "Огноо";
                case 1 : return "Цаг минут";
                case 2 : return "Код";
                case 3 : return "Үйлдэл";
                case 4 : return "Утга";
            }

            return "col" + col;
        }

        @Override
        public Class getColumnClass(int c) {
            return String.class;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Log data = values.get(rowIndex);
            switch (columnIndex) {
                case 0 : return DATE.format(data.getCreatedAt());
                case 1 : return TIME.format(data.getCreatedAt());
                case 2 : return data.getClientCode();
                case 3 : return data.getAction();
                case 4 : return data.getDescription();
            }

            return null;
        }

    }
}
